on: [push, pull_request]

name: Continuous integration

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get install --yes libwayland-dev libegl1-mesa-dev

      - name: Setup Rust toolchain
        run: |
          rustup toolchain install stable --profile minimal

      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: Check
        run: cargo check --all --verbose

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get install --yes libwayland-dev libegl1-mesa-dev

      - name: Setup Rust toolchain
        run: |
          rustup toolchain install stable --profile minimal

      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: Test
        run: cargo test --all --verbose

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        run: |
          rustup toolchain install stable --profile minimal
          rustup component add rustfmt

      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: Format
        run: cargo fmt --check --all --verbose

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        run: |
          rustup toolchain install stable --profile minimal
          rustup component add clippy

      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.9

      - uses: taiki-e/install-action@v2
        with:
          tool: clippy-sarif
      - uses: taiki-e/install-action@v2
        with:
          tool: sarif-fmt

      - name: Run rust-clippy
        run:
          cargo clippy
          --all
          --verbose
          --all-features
          --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true

  update:
    name: Check Cargo.lock
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        run: |
          rustup toolchain install stable --profile minimal

      - name: Check if Cargo.lock needs to be updated
        run: cargo update -w --locked

  audit:
    name: Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        run: |
          rustup toolchain install stable --profile minimal

      - name: Install cargo-audit binary crate
        uses: taiki-e/install-action@cargo-audit

      - name: Security audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
